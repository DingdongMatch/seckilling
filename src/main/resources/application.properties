# thymeleaf
spring.thymeleaf.enabled = true
## 禁用模板缓存
spring.thymeleaf.cache = false
spring.thymeleaf.servlet.content-type = text/html
spring.thymeleaf.encoding = UTF-8
spring.thymeleaf.mode = HTML
spring.thymeleaf.prefix = classpath:/templates/
spring.thymeleaf.suffix = .html

# mybatis
mybatis.type-aliases-package = com.seeling.seckilling.domain
mybatis.configuration.map-underscore-to-camel-case = true
mybatis.configuration.default-fetch-size = 100
mybatis.configuration.default-statement-timeout = 3000
mybatis.mapper-locations=classpath:com/seeling/seckilling/dao/*.xml

# druid
## JDBC配置
spring.datasource.url = jdbc:mysql://localhost:3306/seckilling?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useLegacyDatetimeCode=false&useSSL=true&serverTimezone=GMT%2B8
spring.datasource.username = root
spring.datasource.password = Match0.0
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver

## 连接池配置
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.filters = stat

# -------------连接池大小相关参数--------------------------------
# 初始化时建立物理连接的个数
# 默认为0
spring.datasource.druid.initial-size = 10
# 最大连接池数量
# 默认为8
spring.datasource.druid.max-active = 20
# 最小空闲连接数量
# 默认为0
spring.datasource.druid.min-idle = 10
# 获取连接时最大等待时间，单位毫秒。
# 配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
# 默认-1，表示无限等待
spring.datasource.druid.max-wait = 6000

# -------------缓存语句--------------------------------
# 是否缓存preparedStatement，也就是PSCache。
# PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
# 默认为false
spring.datasource.druid.pool-prepared-statements = true
# PSCache的最大个数。
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
# 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
# 默认为10
spring.datasource.druid.max-open-prepared-statements = 2

# -------------连接检测情况--------------------------------
# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
# 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
# 默认为空
spring.datasource.druid.validation-query = SELECT 'X'
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
# 默认为false
spring.datasource.druid.test-on-borrow = false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
# 默认为false
spring.datasource.druid.test-on-return = false
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
# 建议配置为true，不影响性能，并且保证安全性。
# 默认为true
spring.datasource.druid.test-while-idle = true
# 有两个含义：
# 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
# 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
# 默认1000*60
spring.datasource.druid.time-between-eviction-runs-millis = 6000
# 连接保持空闲而不被驱逐的最小时间。
# 默认值1000*60*30 = 30分钟
spring.datasource.druid.min-evictable-idle-time-millis = 300000

# redis
redis.host = localhost
redis.port = 6379
redis.timeout = 2000
redis.password =
redis.poolMaxTotal = 10
redis.poolMaxIdle = 5
redis.poolMaxWait = 180

# login
logging.level.com.seeling = debug
logging.level.org.springframework = warn

#static
spring.resources.add-mappings=true
spring.resources.cache.period= 3600
spring.resources.chain.cache=true 
spring.resources.chain.enabled=true
spring.resources.chain.compressed=true
spring.resources.chain.html-application-cache=true
spring.resources.static-locations=classpath:/static/

#rabbitmq
spring.rabbitmq.host=47.105.78.165
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
spring.rabbitmq.listener.simple.concurrency= 10
spring.rabbitmq.listener.simple.max-concurrency= 10
spring.rabbitmq.listener.simple.prefetch= 1
spring.rabbitmq.listener.simple.auto-startup=true
spring.rabbitmq.listener.simple.default-requeue-rejected= true
spring.rabbitmq.template.retry.enabled=true 
spring.rabbitmq.template.retry.initial-interval=1000
spring.rabbitmq.template.retry.max-attempts=3
spring.rabbitmq.template.retry.max-interval=10000
spring.rabbitmq.template.retry.multiplier=1.0
